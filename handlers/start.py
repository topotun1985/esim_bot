from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from sqlalchemy.ext.asyncio import AsyncSession

from database.queries import get_or_create_user
from utils.states import MainMenu, BuyESim, AccountMenu, SupportMenu, CallbackData

router = Router()


def get_main_menu_keyboard(language_code: str = 'ru'):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()
    
    if language_code == 'ru':
        builder.button(text="üåé –ö—É–ø–∏—Ç—å eSIM", callback_data="buy_esim")
        builder.button(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="account")
        builder.button(text="‚ùì –ü–æ–º–æ—â—å", callback_data="support")
        builder.button(text="‚ÑπÔ∏è –û —Ç–∞—Ä–∏—Ñ–∞—Ö", callback_data="about_tariffs")
    else:  # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        builder.button(text="üåé Buy eSIM", callback_data="buy_esim")
        builder.button(text="üë§ My Account", callback_data="account")
        builder.button(text="‚ùì Support", callback_data="support")
        builder.button(text="‚ÑπÔ∏è About Tariffs", callback_data="about_tariffs")
    
    builder.adjust(1)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()


async def get_welcome_message(language_code: str = 'ru'):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞"""
    if language_code == 'ru':
        return (
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ eSIM!\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ eSIM –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. "
            "–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω—É, —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω –∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.\n\n"
            "üîπ –ß—Ç–æ —Ç–∞–∫–æ–µ eSIM?\n"
            "eSIM (embedded SIM) - —ç—Ç–æ —Ü–∏—Ñ—Ä–æ–≤–∞—è SIM-–∫–∞—Ä—Ç–∞, –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –≤ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ. "
            "–û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ —Å–æ—Ç–æ–≤—ã–º —Å–µ—Ç—è–º –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫—É—é SIM-–∫–∞—Ä—Ç—É.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:"
        )
    else:  # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return (
            "üëã Welcome to the eSIM selling bot!\n\n"
            "This bot will help you purchase eSIMs for travel all around the world. "
            "Simply select the country, data plan, and payment method.\n\n"
            "üîπ What is an eSIM?\n"
            "eSIM (embedded SIM) is a digital SIM card built into your device. "
            "It allows you to connect to cellular networks without needing a physical SIM card.\n\n"
            "Please select one of the options below:"
        )


@router.message(CommandStart())
async def command_start(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await get_or_create_user(
        session, 
        message.from_user.id,
        message.from_user.username,
        message.from_user.first_name,
        message.from_user.last_name,
        message.from_user.language_code or 'ru'
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    await state.clear()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(MainMenu.menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    welcome_message = await get_welcome_message(user.language_code)
    await message.answer(
        welcome_message,
        reply_markup=get_main_menu_keyboard(user.language_code)
    )


@router.message(Command("menu"))
async def command_menu(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await get_or_create_user(
        session, 
        message.from_user.id,
        message.from_user.username,
        message.from_user.first_name,
        message.from_user.last_name,
        message.from_user.language_code or 'ru'
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    await state.clear()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(MainMenu.menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if user.language_code == 'ru':
        await message.answer(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_menu_keyboard(user.language_code)
        )
    else:
        await message.answer(
            "Main Menu:",
            reply_markup=get_main_menu_keyboard(user.language_code)
        )


@router.callback_query(F.data == "main_menu")
async def process_main_menu_callback(callback: CallbackQuery, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await get_or_create_user(
        session, 
        callback.from_user.id,
        callback.from_user.username,
        callback.from_user.first_name,
        callback.from_user.last_name,
        callback.from_user.language_code or 'ru'
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    await state.clear()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await state.set_state(MainMenu.menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if user.language_code == 'ru':
        await callback.message.edit_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_menu_keyboard(user.language_code)
        )
    else:
        await callback.message.edit_text(
            "Main Menu:",
            reply_markup=get_main_menu_keyboard(user.language_code)
        )
    
    await callback.answer()


@router.callback_query(F.data == "buy_esim")
async def process_buy_esim_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ö—É–ø–∏—Ç—å eSIM'"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
    await state.set_state(BuyESim.select_country)
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω—ã
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ handlers/buy_esim.py
    if callback.from_user.language_code == 'ru':
        await callback.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ eSIM:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∞–º–∏
        )
    else:
        await callback.message.edit_text(
            "Select a country for your eSIM:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∞–º–∏
        )
    
    await callback.answer()


@router.callback_query(F.data == "account")
async def process_account_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    await state.set_state(AccountMenu.menu)
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ handlers/account.py
    if callback.from_user.language_code == 'ru':
        await callback.message.edit_text(
            "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        )
    else:
        await callback.message.edit_text(
            "My Account:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        )
    
    await callback.answer()


@router.callback_query(F.data == "support")
async def process_support_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–º–æ—â—å'"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–º–æ—â–∏
    await state.set_state(SupportMenu.menu)
    
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ handlers/support.py
    if callback.from_user.language_code == 'ru':
        await callback.message.edit_text(
            "–†–∞–∑–¥–µ–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        )
    else:
        await callback.message.edit_text(
            "Support Section:",
            reply_markup=None  # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        )
    
    await callback.answer()


@router.callback_query(F.data == "about_tariffs")
async def process_about_tariffs_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–û —Ç–∞—Ä–∏—Ñ–∞—Ö'"""
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
    if callback.from_user.language_code == 'ru':
        await callback.message.edit_text(
            "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö:\n\n"
            "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º eSIM –¥–ª—è –±–æ–ª–µ–µ —á–µ–º 100 —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏.\n\n"
            "–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n"
            "‚úÖ –ë—ã—Å—Ç—Ä–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è eSIM —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã\n"
            "‚úÖ –£–¥–æ–±–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Pay –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã\n"
            "‚úÖ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö\n"
            "‚úÖ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤ —Ä–∞–∑–¥–µ–ª–µ '–ö—É–ø–∏—Ç—å eSIM' —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–∞—Ö.",
            reply_markup=InlineKeyboardBuilder().button(
                text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"
            ).as_markup()
        )
    else:
        await callback.message.edit_text(
            "‚ÑπÔ∏è Tariff Information:\n\n"
            "We offer eSIMs for more than 100 countries with various data plans.\n\n"
            "Our advantages:\n"
            "‚úÖ Fast eSIM activation immediately after payment\n"
            "‚úÖ Convenient payment via Telegram Pay and cryptocurrencies\n"
            "‚úÖ 24/7 support in Russian and English\n"
            "‚úÖ High-speed mobile internet\n\n"
            "Select a country in the 'Buy eSIM' section to learn more about available tariffs.",
            reply_markup=InlineKeyboardBuilder().button(
                text="üîô Back to Main Menu", callback_data="main_menu"
            ).as_markup()
        )
    
    await callback.answer()